# Build all images and run all containers
# `docker-compose -f docker-compose-local.yml up -d --build --force-recreate`

version: '3.8'
services:

  postgres:
    image: postgres:14
    restart: on-failure
    environment:
      - POSTGRES_USER=geoblacklight_user
      - POSTGRES_PASSWORD=password
      - POSTGRES_DB=geoblacklight_local_db
      - POSTGRES_PORT=5432
      - POSTGRES_HOST_AUTH_METHOD=trust
      - TZ=America/New_York
    ports:
      - 5432
    volumes:
      - ./db-data:/var/lib/postgresql/data
    networks:
      - gbl-network

  geoblacklight_web:
    image: geoblacklight
    build:
      context: ./
      dockerfile: DockerfilePsql
    env_file: .env
    tty: true
    ports:
      - "21800:4000"
    depends_on:
      - postgres
    networks:
      - gbl-network

  geoblacklight_tasks:
    image: geoblacklight
    env_file: .env
    entrypoint: ["sh", "-c"]
    command:
      - bin/db-wait.sh ${POSTGRES_HOST}:${POSTGRES_PORT} sh -c "bundle exec rails db:migrate && echo 'migrated' && bundle exec rake devise_guests:delete_old_guest_users[7] && echo 'deleted guests'"
    tty: true
    depends_on:
      - postgres
    networks:
      - gbl-network

  solr:
    image: solr:8.8
    ports:
      - 8983:8983
    command:
      - sh
      - "-c"
      - "solr-precreate geoblacklight /opt/solr/server/configsets/geoblacklightconf"
    volumes:
      - solr_home:/var/solr/data:cached
      - ./solr/conf:/opt/solr/server/configsets/geoblacklightconf
    networks:
      - gbl-network
      
# Create a custom docker network if it does not exist already
networks:
  gbl-network:
    name: gbl-network

volumes:
  solr_home:
